// <auto-generated />
using CarCenter.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarCenter.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250720085410_createdatabase")]
    partial class createdatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CarCenter.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CarModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarSizeID")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("RollID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarSizeID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("RollID");

                    b.ToTable("bookings");
                });

            modelBuilder.Entity("CarCenter.Models.CarSize", b =>
                {
                    b.Property<int>("CarSizeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarSizeID"), 1L, 1);

                    b.Property<string>("CarSizeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarSizeID");

                    b.ToTable("carSizes");

                    b.HasData(
                        new
                        {
                            CarSizeID = 1,
                            CarSizeName = "Sedan-Car"
                        },
                        new
                        {
                            CarSizeID = 2,
                            CarSizeName = "Mid-Car"
                        },
                        new
                        {
                            CarSizeID = 3,
                            CarSizeName = "Big-Car"
                        });
                });

            modelBuilder.Entity("CarCenter.Models.Contact", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("CarCenter.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"), 1L, 1);

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            EmployeeName = "Mohammad Sawalha"
                        },
                        new
                        {
                            EmployeeID = 2,
                            EmployeeName = "Ayham Sawalha"
                        },
                        new
                        {
                            EmployeeID = 3,
                            EmployeeName = "Ahmed Sawalha"
                        });
                });

            modelBuilder.Entity("CarCenter.Models.Roll", b =>
                {
                    b.Property<int>("RollID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RollID"), 1L, 1);

                    b.Property<string>("RollName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RollID");

                    b.ToTable("rolls");

                    b.HasData(
                        new
                        {
                            RollID = 1,
                            RollName = "Dry Clean"
                        },
                        new
                        {
                            RollID = 2,
                            RollName = "Polishing"
                        },
                        new
                        {
                            RollID = 3,
                            RollName = "Car Wash"
                        });
                });

            modelBuilder.Entity("CarCenter.Models.Booking", b =>
                {
                    b.HasOne("CarCenter.Models.CarSize", "carSize")
                        .WithMany()
                        .HasForeignKey("CarSizeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarCenter.Models.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarCenter.Models.Roll", "roll")
                        .WithMany()
                        .HasForeignKey("RollID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("carSize");

                    b.Navigation("employee");

                    b.Navigation("roll");
                });
#pragma warning restore 612, 618
        }
    }
}
